---
domain: www.genuinerepresentation.org # This is the domain used for the virtual server on the compile server. CNAME that domain to cache.cape.io and it will serve the compiled website.
uid: 1 # The CAPE user ID to use for authenticating against the providers when requesting API resources. This needs to be updated to the correct uid.

# Updated and new content must match an API before it checks the views.
api: # An API is a set of default information. Think of an API as a collection of content.
  cloudfiles: # Used for uploads to the CDN used for the website.
    provider: cloudfiles
    arg:
      container: www.genuinerepresentation.org
  content: # Used to get content from github.
    provider: github
    arg:
      repo: ccd-content
      owner: sundaysenergy
      branch: master
    # CAPE only listens for new or changed content.
    load: # To load previously created content from this API you need to specificy the load param.
      resource: tree # Github has a nice index of all content in a repo.
      _id: path
      arg:
        recursive: true # Thankfully they have an option to get results recursively.
        sha: a51f8ef6d8873804191ec4fd2d3a311140e0ea4b # Only problem is having to update the sha.
        # Will likely create something to auto get the sha in the future. Perhaps getting the args from another view.
  theme: # Used to get content from github.
    provider: github
    arg:
      repo: ccd-theme
      owner: sundaysenergy
      branch: master
    # CAPE only listens for new or changed content.
    load: # To load previously created content from this API you need to specificy the load param.
      resource: tree # Github has a nice index of all content in a repo.
      _id: path
      arg:
        recursive: true # Thankfully they have an option to get results recursively.
        sha: 164c4391fa83877488b5713a650523c4cd04b7c6 # Only problem is having to update the sha.
        # Will likely create something to auto get the sha in the future. Perhaps getting the args from another view.

view:
  theme:  # theme - all the files...#
    style: files
    filter:
      api: theme
      must:
        _ext: .css
    field:
      _file:
        api: theme
        resource: raw
        type: any
        arg:
          path: '{{&_id}}'
    destination: # What to do with the page. Where to send it.
      api: cloudfiles
      resource: upload # Upload it to cloud files.
      arg:
        file: '/{{&_id}}' # At this file address.

  files: # site files within content repo#
    style: files
    filter:
      api: content
      must:
        _dirname: files
    field:
      _file:
        api: content
        resource: raw
        type: any
        arg:
          path: '{{&_id}}'
    destination: # What to do with the page. Where to send it.
      api: cloudfiles
      resource: upload # Upload it to cloud files.
      arg:
        file: '/{{&_id}}' # At this file address.

  data: # data view #
    style: object
    filter:
      api: content
      must:
        _id: data.yaml
    field: # The base "entity" in CAPE is the _id field. That's it.
      # To get the contents of the file we need to add a "meta-field"
      _self: # _self is a special meta-field that will place its own fields within the base context.
        api: content # The _self field is processed first.
        resource: raw # This just defines what API at github to use.
        type: yaml # This tells CAPE what to do with the file that it gets. This should default to the file extension.
        arg:
          path: '{{&_id}}' # The raw github API call requires a path param.

  pages: # pages view #
    style: list
    filter:
      api: content
      must:
        _id:
          ext: .md
    field: # The base "entity" in CAPE is the _id field. That's it.
      # To get the contents of the file we need to add a "meta-field"
      _self: # _self is a special meta-field that will place its own fields within the base context.
        api: content # The _self field is processed first.
        resource: raw # This just defines what API at github to use.
        type: md # This tells CAPE what to do with the file that it gets. 'md' converts the yaml into an object and content into html.
        arg:
          path: '{{&_id}}' # The raw github API call requires a path param.
    display:
      pages:
        style: pages
        type: html
        field:
          data:
            view: data
            map:
              navigation: navigation
        pager: # Style pages requires a pager.
          per_pg: 1 # Entities per page. 1 is the default.
          id: _filename # Default is to ID the pages with a number. This overrides that.
        template:
          api: theme
          resource: raw
          arg:
            path: templates/default.mustache
          convert: mustache
        destination: # What to do with the page. Where to send it.
          api: cloudfiles
          resource: upload # Upload it to cloud files.
          arg:
            file: '/{{&page._no_ext}}.html' # At this file address.

